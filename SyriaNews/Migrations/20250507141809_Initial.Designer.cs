// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SyriaNews.Data;

#nullable disable

namespace SyriaNews.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250507141809_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "9a0d8d62-fad1-4803-b768-5d22153fd11c",
                            RoleId = "0ce39245-a57c-4d26-9343-79ed6611c233"
                        },
                        new
                        {
                            UserId = "dfd785f5-0df6-4817-98b0-ae9e3a772fe2",
                            RoleId = "f297ee1c-65c5-45d7-8533-a24e36d0ec3a"
                        },
                        new
                        {
                            UserId = "9cf025ee-90de-415d-aee5-8f1704f7e33c",
                            RoleId = "6134adcc-8a86-4343-909b-5d83c7b29d81"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Admin", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserID");

                    b.ToTable("Admins", (string)null);

                    b.HasData(
                        new
                        {
                            UserID = "9a0d8d62-fad1-4803-b768-5d22153fd11c"
                        });
                });

            modelBuilder.Entity("SyriaNews.Models.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0ce39245-a57c-4d26-9343-79ed6611c233",
                            ConcurrencyStamp = "9d9cdf99-989d-4d45-9e94-7adcc695c73c",
                            IsDefault = false,
                            IsDeleted = false,
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "f297ee1c-65c5-45d7-8533-a24e36d0ec3a",
                            ConcurrencyStamp = "d684b80c-6aad-48dc-bb9f-9b6c2d1d945b",
                            IsDefault = true,
                            IsDeleted = false,
                            Name = "Newspaper",
                            NormalizedName = "NEWSPAPER"
                        },
                        new
                        {
                            Id = "6134adcc-8a86-4343-909b-5d83c7b29d81",
                            ConcurrencyStamp = "64e4c84b-cfd6-4f23-819a-a1053a613002",
                            IsDefault = true,
                            IsDeleted = false,
                            Name = "Member",
                            NormalizedName = "MEMBER"
                        });
                });

            modelBuilder.Entity("SyriaNews.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("TypeUser")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "9a0d8d62-fad1-4803-b768-5d22153fd11c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f6c081f7-b116-45b5-af15-4c4f86ced16f",
                            Email = "admin@Syria-News.com",
                            EmailConfirmed = true,
                            JoinAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "ADMIN@SYRIA-NEWS.COM",
                            NormalizedUserName = "ADMIN@SYRIA-NEWS.COM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAGIqzCqD8LHY3GmiiiWau6NEuMv2hzI3oeNV/vRYy5eNmTN+NOGHh5/EV/m90aFsA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "A180686382BE42DDA62A4DAE3CA4C96D",
                            TwoFactorEnabled = false,
                            TypeUser = "Admin",
                            UserName = "admin@Syria-News.com"
                        },
                        new
                        {
                            Id = "dfd785f5-0df6-4817-98b0-ae9e3a772fe2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "119a04da-36a8-4242-86e8-99693eea4d35",
                            Email = "abd.newspaper@teml.net",
                            EmailConfirmed = true,
                            JoinAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "ABD.NEWSPAPER@TEML.NET",
                            NormalizedUserName = "ABD.NEWSPAPER@TEML.NET",
                            PasswordHash = "AQAAAAIAAYagAAAAEK9NeT3AI02JRzvBuP0hVzcHH2dJRfMKVOzaDqQVTC6SnIw3B0Wva4vRWca2pLNAKA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7B2BE153061A454DB5A30641FA09E031",
                            TwoFactorEnabled = false,
                            TypeUser = "NewsPaper",
                            UserName = "abd.newspaper@teml.net"
                        },
                        new
                        {
                            Id = "9cf025ee-90de-415d-aee5-8f1704f7e33c",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "14767317-e624-4d8b-b022-46b472b3ff64",
                            Email = "abd.member@teml.net",
                            EmailConfirmed = true,
                            JoinAt = new DateTime(2025, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LockoutEnabled = false,
                            NormalizedEmail = "ABD.MEMBER@TEML.NET",
                            NormalizedUserName = "ABD.MEMBER@TEML.NET",
                            PasswordHash = "AQAAAAIAAYagAAAAEAQv74U6CUGdhEBKk+lnssvMEJKwDCyTDpDelRX7qTPmSlEzUPo8Q+rIcqX/tALVQA==",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "51FCE276AB8645FB9136739D0B34B448",
                            TwoFactorEnabled = false,
                            TypeUser = "Member",
                            UserName = "abd.member@teml.net"
                        });
                });

            modelBuilder.Entity("SyriaNews.Models.Article", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AllComments")
                        .HasColumnType("int");

                    b.Property<int>("AllLikes")
                        .HasColumnType("int");

                    b.Property<string>("CategoryID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descrpition")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPosted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewsPaperID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Views")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.HasIndex("NewsPaperID");

                    b.ToTable("Articles", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.ArticlesTags", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TagID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleID");

                    b.HasIndex("TagID");

                    b.ToTable("ArticlesTags");
                });

            modelBuilder.Entity("SyriaNews.Models.Category", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName")
                        .IsUnique();

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Comment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleID");

                    b.HasIndex("MemberID");

                    b.ToTable("Comments", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Follower", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NewsPaperID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NewsPaperID");

                    b.HasIndex("MemberID", "NewsPaperID")
                        .IsUnique();

                    b.ToTable("Followers", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Placement")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ArticleID", "Placement")
                        .IsUnique();

                    b.ToTable("Images", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Like", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleID");

                    b.HasIndex("MemberID", "ArticleID")
                        .IsUnique();

                    b.ToTable("Likes", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Member", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("UserID");

                    b.ToTable("Members", (string)null);

                    b.HasData(
                        new
                        {
                            UserID = "9cf025ee-90de-415d-aee5-8f1704f7e33c",
                            FirstName = "Abd Al-Ruhman",
                            Gender = false,
                            IsActive = true,
                            LastName = "Al-Saleh"
                        });
                });

            modelBuilder.Entity("SyriaNews.Models.NewsPaper", b =>
                {
                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("followers")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("NewsPapers", (string)null);

                    b.HasData(
                        new
                        {
                            UserID = "dfd785f5-0df6-4817-98b0-ae9e3a772fe2",
                            IsActive = true,
                            Name = "Sama-News",
                            followers = 0
                        });
                });

            modelBuilder.Entity("SyriaNews.Models.Notification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AdminUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityID")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("EntityType")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsReaded")
                        .HasColumnType("bit");

                    b.Property<string>("MemberUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NewsPaperUserID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NotificationTypes")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ReceiveUserID")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SenderUserID")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("AdminUserID");

                    b.HasIndex("MemberUserID");

                    b.HasIndex("NewsPaperUserID");

                    b.ToTable("Notifications", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.ProfileImage", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("userID")
                        .IsUnique();

                    b.ToTable("ProfileImages");
                });

            modelBuilder.Entity("SyriaNews.Models.Save", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ArticleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ArticleID");

                    b.HasIndex("MemberID", "ArticleID")
                        .IsUnique();

                    b.ToTable("Saves", (string)null);
                });

            modelBuilder.Entity("SyriaNews.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("TagName")
                        .IsUnique();

                    b.ToTable("Tags", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("SyriaNews.Models.Admin", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", "User")
                        .WithOne("Admin")
                        .HasForeignKey("SyriaNews.Models.Admin", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SyriaNews.Models.ApplicationUser", b =>
                {
                    b.OwnsMany("SyriaNews.Models.RefreshToken", "refreshTokens", b1 =>
                        {
                            b1.Property<string>("UserID")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<DateTime>("CreatedOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("ExpiresOn")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime?>("RevokedOn")
                                .HasColumnType("datetime2");

                            b1.Property<string>("Token")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("UserID", "Id");

                            b1.ToTable("RefreshTokens", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserID");
                        });

                    b.Navigation("refreshTokens");
                });

            modelBuilder.Entity("SyriaNews.Models.Article", b =>
                {
                    b.HasOne("SyriaNews.Models.Category", "Category")
                        .WithMany("Articles")
                        .HasForeignKey("CategoryID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.NewsPaper", "NewsPaper")
                        .WithMany("Articles")
                        .HasForeignKey("NewsPaperID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("NewsPaper");
                });

            modelBuilder.Entity("SyriaNews.Models.ArticlesTags", b =>
                {
                    b.HasOne("SyriaNews.Models.Article", "Article")
                        .WithMany("ArticlesTags")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.Tag", "Tag")
                        .WithMany("ArticlesTags")
                        .HasForeignKey("TagID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("SyriaNews.Models.Comment", b =>
                {
                    b.HasOne("SyriaNews.Models.Article", "Article")
                        .WithMany("Comments")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.Member", "Member")
                        .WithMany("Comments")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SyriaNews.Models.Follower", b =>
                {
                    b.HasOne("SyriaNews.Models.Member", "Member")
                        .WithMany("Followers")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.NewsPaper", "NewsPaper")
                        .WithMany("Followers")
                        .HasForeignKey("NewsPaperID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("NewsPaper");
                });

            modelBuilder.Entity("SyriaNews.Models.Image", b =>
                {
                    b.HasOne("SyriaNews.Models.Article", "Article")
                        .WithMany("Images")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");
                });

            modelBuilder.Entity("SyriaNews.Models.Like", b =>
                {
                    b.HasOne("SyriaNews.Models.Article", "Article")
                        .WithMany("Likes")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.Member", "Member")
                        .WithMany("Likes")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SyriaNews.Models.Member", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", "User")
                        .WithOne("Member")
                        .HasForeignKey("SyriaNews.Models.Member", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SyriaNews.Models.NewsPaper", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", "User")
                        .WithOne("NewsPaper")
                        .HasForeignKey("SyriaNews.Models.NewsPaper", "UserID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SyriaNews.Models.Notification", b =>
                {
                    b.HasOne("SyriaNews.Models.Admin", "Admin")
                        .WithMany("Notifications")
                        .HasForeignKey("AdminUserID");

                    b.HasOne("SyriaNews.Models.Member", "Member")
                        .WithMany("Notifications")
                        .HasForeignKey("MemberUserID");

                    b.HasOne("SyriaNews.Models.NewsPaper", "NewsPaper")
                        .WithMany("Notifications")
                        .HasForeignKey("NewsPaperUserID");

                    b.Navigation("Admin");

                    b.Navigation("Member");

                    b.Navigation("NewsPaper");
                });

            modelBuilder.Entity("SyriaNews.Models.ProfileImage", b =>
                {
                    b.HasOne("SyriaNews.Models.ApplicationUser", "User")
                        .WithOne("ProfileImage")
                        .HasForeignKey("SyriaNews.Models.ProfileImage", "userID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SyriaNews.Models.Save", b =>
                {
                    b.HasOne("SyriaNews.Models.Article", "Article")
                        .WithMany("Saves")
                        .HasForeignKey("ArticleID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("SyriaNews.Models.Member", "Member")
                        .WithMany("Saves")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Article");

                    b.Navigation("Member");
                });

            modelBuilder.Entity("SyriaNews.Models.Admin", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SyriaNews.Models.ApplicationUser", b =>
                {
                    b.Navigation("Admin");

                    b.Navigation("Member");

                    b.Navigation("NewsPaper");

                    b.Navigation("ProfileImage");
                });

            modelBuilder.Entity("SyriaNews.Models.Article", b =>
                {
                    b.Navigation("ArticlesTags");

                    b.Navigation("Comments");

                    b.Navigation("Images");

                    b.Navigation("Likes");

                    b.Navigation("Saves");
                });

            modelBuilder.Entity("SyriaNews.Models.Category", b =>
                {
                    b.Navigation("Articles");
                });

            modelBuilder.Entity("SyriaNews.Models.Member", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Followers");

                    b.Navigation("Likes");

                    b.Navigation("Notifications");

                    b.Navigation("Saves");
                });

            modelBuilder.Entity("SyriaNews.Models.NewsPaper", b =>
                {
                    b.Navigation("Articles");

                    b.Navigation("Followers");

                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("SyriaNews.Models.Tag", b =>
                {
                    b.Navigation("ArticlesTags");
                });
#pragma warning restore 612, 618
        }
    }
}
